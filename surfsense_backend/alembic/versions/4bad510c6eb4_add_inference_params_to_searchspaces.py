"""add inference_params to searchspaces

Revision ID: 4bad510c6eb4
Revises: 21
Create Date: 2025-10-05 10:19:08.790345

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4bad510c6eb4'
down_revision: Union[str, None] = '21'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('chats', 'type',
               existing_type=postgresql.ENUM('QNA', 'REPORT_GENERAL', 'REPORT_DEEP', 'REPORT_DEEPER', name='chattype'),
               nullable=False)
    op.drop_index(op.f('chucks_search_index'), table_name='chunks', postgresql_using='gin')
    op.drop_index(op.f('chucks_vector_index'), table_name='chunks', postgresql_using='hnsw')
    op.drop_index(op.f('document_search_index'), table_name='documents', postgresql_using='gin')
    op.drop_index(op.f('document_vector_index'), table_name='documents', postgresql_using='hnsw')
    op.add_column('searchspaces', sa.Column('inference_params', sa.JSON(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('searchspaces', 'inference_params')
    op.create_index(op.f('document_vector_index'), 'documents', ['embedding'], unique=False, postgresql_using='hnsw')
    op.create_index(op.f('document_search_index'), 'documents', [sa.literal_column("to_tsvector('english'::regconfig, content)")], unique=False, postgresql_using='gin')
    op.create_index(op.f('chucks_vector_index'), 'chunks', ['embedding'], unique=False, postgresql_using='hnsw')
    op.create_index(op.f('chucks_search_index'), 'chunks', [sa.literal_column("to_tsvector('english'::regconfig, content)")], unique=False, postgresql_using='gin')
    op.alter_column('chats', 'type',
               existing_type=postgresql.ENUM('QNA', 'REPORT_GENERAL', 'REPORT_DEEP', 'REPORT_DEEPER', name='chattype'),
               nullable=True)
    # ### end Alembic commands ###
